// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
model Food{ //para cada 100gm de alimentos
  id                String  @id @default(cuid())
  name String
  calories Int
  carbs Int
  protein Int
  fat Int
  mealFoods MealFood[]
}

model Meal{
  id                String  @id @default(cuid())
  userId String
  user              User    @relation(fields: [userId], references: [id])
  mealType String
  dateMeal String
  mealFoods MealFood[]
  
  @@index([userId])
}

model MealFood{
  id                String  @id @default(cuid())
  mealId String
  meal Meal @relation(fields: [mealId], references: [id])
  foodId String
  food Food @relation(fields: [foodId], references: [id])

  @@index([mealId])
  @@index([foodId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.Text
    access_token      String?  @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    height        Int?
    weight        Int?
    age           Int?
    targetWeight  Int?
    meals Meal[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
